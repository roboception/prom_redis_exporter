before_script:
  - export DISTRO_CODENAME=`lsb_release -cs` && echo Using distro $DISTRO_CODENAME
  - echo "deb http://apt.roboception.de/backports $(lsb_release -sc) main" > /etc/apt/sources.list.d/roboception-backports.list
  - apt-get update -yq && apt-get install -y debhelper devscripts git sed tar curl dh-virtualenv libparse-debcontrol-perl libdistro-info-perl libyaml-dev python3-dev python3-pip python3-setuptools python3-venv

variables:
  GET_SOURCES_ATTEMPTS: "3"
  GIT_DEPTH: "0"

stages:
  - test
  - deploy
  - image

#############
# Job anchors
#############
.amd64_focal_t: &amd64_focal_job
  image: registry.roboception.de/tools/docker_images:focal-buildimage
  tags:
    - amd64
    - docker

.arm64_focal_t: &arm64_focal_job
  image: registry.roboception.de/tools/docker_images:focal-buildimage
  tags:
    - arm64
    - docker

.armhf_focal_t: &armhf_focal_job
  image: registry.roboception.de/tools/docker_images:armhf-focal-buildimage
  tags:
    - armhf
    - docker

.amd64_jammy_t: &amd64_jammy_job
  image: registry.roboception.de/tools/docker_images:jammy-buildimage
  tags:
    - amd64
    - docker

.arm64_jammy_t: &arm64_jammy_job
  image: registry.roboception.de/tools/docker_images:jammy-buildimage
  tags:
    - arm64
    - docker

.armhf_jammy_t: &armhf_jammy_job
  image: registry.roboception.de/tools/docker_images:armhf-jammy-buildimage
  tags:
    - armhf
    - docker

#############
# Templates
#############
.test:
  stage: test
  script:
    - pip3 install tox
    - tox

# Debian packaging
.package:
  stage: deploy
  script:
    - export VERSION=$((git describe --match "v[0-9].[0-9]*" 2> /dev/null || echo "v0.0.0-$(git rev-list --count HEAD)-g$(git rev-parse --short HEAD)") | sed -r 's/v(.*)/\1/' | sed 's/-/+/g')-1~$DISTRO_CODENAME
    - dpkg-checkbuilddeps
    - dch --newversion $VERSION --controlmaint --distribution $DISTRO_CODENAME "$(git log -n1 --format="%s")"
    - dpkg-buildpackage -us -uc
    - if [ -z "$APT_REPO" ]; then export APT_REPO=testing; fi
    - upload_deb.sh $DISTRO_CODENAME-$APT_REPO ../prom-redis-exporter_$VERSION*.deb
    - rm -f ../prom-redis-exporter*$VERSION*

.package_testing:
  extends: .package
  only:
    - master
  except:
    - tags
  variables:
    APT_REPO: "testing"

.package_stable:
  extends: .package
  only:
    - /^v[0-9]+\.[0-9]+\.[0-9]+/
  except:
    - branches
  variables:
    APT_REPO: "stable"

# Docker image
.docker_build:
  image: docker:latest
  stage: image
  before_script:
    - docker info
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
    - if [ -z "$IMAGE" ]; then export IMAGE=$CI_REGISTRY_IMAGE ; fi
    - if [ -n "$CI_COMMIT_TAG" ]; then export IMAGE_TAG=$CI_COMMIT_TAG ; else export IMAGE_TAG=$CI_COMMIT_REF_SLUG ; fi
    - if [ "$CI_COMMIT_REF_NAME" = "master" ]; then export IMAGE_TAG=testing ; fi
    - if [ -z "$DOCKER_BUILD_FLAGS" ]; then export DOCKER_BUILD_FLAGS="--pull"; fi
    - if [ -z "$DOCKERFILE_DIR" ]; then export DOCKERFILE_DIR=.; fi
  script:
    - echo "building docker image $IMAGE:$IMAGE_TAG with flags $DOCKER_BUILD_FLAGS"
    - docker build $DOCKER_BUILD_FLAGS -t $IMAGE:$IMAGE_TAG $DOCKERFILE_DIR
    - docker push $IMAGE:$IMAGE_TAG
    - if [ -n "$CI_COMMIT_TAG" ]; then docker tag $IMAGE:$IMAGE_TAG $IMAGE:latest; docker push $IMAGE:latest; docker rmi $IMAGE:latest; fi
    - docker rmi $IMAGE:$IMAGE_TAG || true
  tags:
    - docker-build
  except:
    - tags

.docker_build_stable:
  extends: .docker_build
  only:
    - /^v[0-9]+\.[0-9]+\.[0-9]+/
  except:
    - branches
    - schedules

##############
# Jobs
##############

# Deploy testing (only on master)
#################################
package_testing:focal:amd64:
  <<: *amd64_focal_job
  extends: .package_testing

package_testing:focal:armhf:
  <<: *armhf_focal_job
  extends: .package_testing

package_testing:focal:arm64:
  <<: *arm64_focal_job
  extends: .package_testing

package_testing:jammy:amd64:
  <<: *amd64_jammy_job
  extends: .package_testing

package_testing:jammy:arm64:
  <<: *arm64_jammy_job
  extends: .package_testing

package_testing:jammy:armhf:
  <<: *armhf_jammy_job
  extends: .package_testing

# Deploy stable (only for releases, version tags)
#################################################
package_stable:focal:amd64:
  <<: *amd64_focal_job
  extends: .package_stable

package_stable:focal:armhf:
  <<: *armhf_focal_job
  extends: .package_stable

package_stable:focal:arm64:
  <<: *arm64_focal_job
  extends: .package_stable

package_stable:jammy:amd64:
  <<: *amd64_jammy_job
  extends: .package_stable

package_stable:jammy:arm64:
  <<: *arm64_jammy_job
  extends: .package_stable

package_stable:jammy:armhf:
  <<: *armhf_jammy_job
  extends: .package_stable

# Build and push as docker image
################################
image_testing:
  extends: .docker_build

image_stable:
  extends: .docker_build_stable

